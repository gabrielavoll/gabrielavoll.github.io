.article
	.article-title

		h3 May 29, 2017
		h1 Inital Post
		h2 by Gabriela Voll

	.article-body

		p This here is the begining of my little tech blog, a place to essential record my own experiences with different technologies. This blog itself is my first utilization of a javascript module, Harp and Jade. Which from its github describes itself as:

		p "Static Site Server/Generator with built-in preprocessing"

		p This pretty aptly sums it up. I utilized it becasue I wanted to make a mostly Javascript static site on Github pages,, so I looked for something that would make my life more easy.

		p Setup for harp was incredible easy

		.terminal-text= "sudo npm install harp -g"

		p and then just

		.terminal-text= "harp init myFirstHarpApp"

		p to generate the directory for your new harp app, with the following inside:

		ul.terminal-text
			li /myFirstHarpApp
			li= "|-- 404.jade"
			li= "|-- _layout.jade"
			li= "|-- index.jade"
			li= "|-- main.less"

		p At this point you can run,

		.terminal-text= "harp server"

		p and you will harp web server running at localhost:9000, with the inital Welcome text. Now at this point I moved all of the intial pages into a folder called /_harp inside the root directory, so when I put it on github.io my harp files would not get rendered.

		p To compile our app into its final static form, all you run is:

		.terminal-text= "harp compile _harp ./"

		p this will compile all our files in _harp/ into flattened html and css into the root directory of the project. So at this point the myFirstHarpApp is ready to be visible on Github.io

		p As a note now that all server files are inside of the /_harp, to run the server you should cd into the /_harp folder and run the server from there, opposed to in the root directory

		p At the moment before writing this little article, I had just made a splash page, with my name, title and an image that I am using as my impromptu logo. After this article is complete, I will be on my way to having a blog.

		p Making the article itself was very simple, I chose to go the route of utilzing a jade file for my first one, maybe I will switch it up to Markdown or EJS next time. To make an article, first I made an articles directory

		.terminal-text
			| mkdir articles <br />
			| cd articles

		p then i create my jade file for the new article, this article is called Intial Post, and its url is /articles/inital-post, which is directly derived from the jade file name, intial-post.jade. And i created a basic metadata file _data.json, inside the articles/ folder

		.terminal-text
			| touch intial-post.jade <br />
			| touch _data.json

		p My metadata is very bare right now, with just the title and date. But it is obvious there is alot more you can do with the _data.json file, since the documentation says you can specify the specific articles layout from there, and more I reckon.

		p 

